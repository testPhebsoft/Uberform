{"version":3,"file":"main.bff611064fa3e916.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAHA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAHA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA","sources":["C:\\Users\\DELL\\Desktop\\sb6-portal-client-uber\\src\\pages\\home.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { Helmet } from \"fusion-plugin-react-helmet-async\";\r\nimport { assetUrl } from \"fusion-core\";\r\nimport Pair from \"../images/pair\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\n\r\nconst flag = assetUrl(\"../../node_modules/react-phone-input-2/lib/style.css\");\r\n\r\nconst css = assetUrl(\"./home.css\");\r\n\r\nconst Home = () => {\r\n  const tick = assetUrl(\"../images/tick.svg\");\r\n  const previous = assetUrl(\"../images/previous.svg\");\r\n  // const Right = assetUrl(\"../images/Right.svg\");\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    reset,\r\n    formState: { errors },\r\n    watch,\r\n  } = useForm();\r\n\r\n  const [currentStep, setCurrentStep] = useState(3);\r\n  const [formData, setFormData] = useState({});\r\n\r\n  const onSubmit = (data) => {\r\n    setFormData((prevData) => ({ ...prevData, ...data }));\r\n    if (currentStep === 2) {\r\n      console.log({ ...formData, ...data }); // Handle form submission\r\n\r\n      setCurrentStep(3);\r\n    } else {\r\n      setCurrentStep((prevStep) => prevStep + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentStep((prevStep) => prevStep - 1);\r\n  };\r\n\r\n  const months = [\r\n    { value: \"1\", name: \"January\" },\r\n    { value: \"2\", name: \"February\" },\r\n    { value: \"3\", name: \"March\" },\r\n    { value: \"4\", name: \"April\" },\r\n    { value: \"5\", name: \"May\" },\r\n    { value: \"6\", name: \"June\" },\r\n    { value: \"7\", name: \"July\" },\r\n    { value: \"8\", name: \"August\" },\r\n    { value: \"9\", name: \"September\" },\r\n    { value: \"10\", name: \"October\" },\r\n    { value: \"11\", name: \"November\" },\r\n    { value: \"12\", name: \"December\" },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n        <link rel=\"stylesheet\" href={css} />\r\n        <link rel=\"stylesheet\" href={flag} />\r\n      </Helmet>\r\n      <nav>Uber</nav>\r\n      <div className=\"container form\">\r\n        <div className=\"container border\">\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            {currentStep === 1 && (\r\n              <>\r\n                <Pair />\r\n                <h1>\r\n                  Uber Insurance quote in <br /> under 2 minutes\r\n                </h1>\r\n                <p>\r\n                  Compare all Uber approved Private Hire motor insurance\r\n                  providers in one place. All Private Hire motor policies must\r\n                  be purchased online. All providers offer automatic uploads of\r\n                  your insurance certificate directly to your Uber account,\r\n                  which will help streamline your verification process.\r\n                </p>\r\n                <div className=\"fields\">\r\n                  <label htmlFor=\"selectField\" className=\"labelName\">\r\n                    Title\r\n                  </label>\r\n                  <div className=\"licField\">\r\n                    <select\r\n                      id=\"selectField\"\r\n                      defaultValue=\"\"\r\n                      className={`inputFields ${errors.title ? \"error\" : \"\"}`}\r\n                      name=\"title\"\r\n                      {...register(\"title\", { required: true })}\r\n                    >\r\n                      <option value=\"\" disabled hidden>\r\n                        e.g Mrs\r\n                      </option>\r\n                      <option value=\"Mr\">Mr</option>\r\n                      <option value=\"Ms\">Ms</option>\r\n                      <option value=\"Mrs\">Mrs</option>\r\n                    </select>\r\n                    {watch(\"title\") && (\r\n                      <img src={tick} alt=\"Tick Icon\" className=\"tickIcon\" />\r\n                    )}\r\n                  </div>\r\n                  {errors.title && (\r\n                    <span className=\"errorField\">This field is required</span>\r\n                  )}\r\n                  <div className=\"nameFields\">\r\n                    <div>\r\n                      <label className=\"labelName\" htmlFor=\"firstName\">\r\n                        First Name\r\n                      </label>\r\n                      <div className=\"licField\">\r\n                        <input\r\n                          placeholder=\"Enter your first name\"\r\n                          type=\"text\"\r\n                          id=\"firstName\"\r\n                          name=\"firstName\"\r\n                          className={`inputFields nameinput ${\r\n                            errors.firstName ? \"error\" : \"\"\r\n                          }`}\r\n                          {...register(\"firstName\", { required: true })}\r\n                        />\r\n                        {watch(\"firstName\") && (\r\n                          <img\r\n                            src={tick}\r\n                            alt=\"Tick Icon\"\r\n                            className=\"tickIcon\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      {errors.firstName && (\r\n                        <span className=\"errorField\">\r\n                          This field is required\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"labelName\" htmlFor=\"lastName\">\r\n                        Last Name\r\n                      </label>\r\n                      <div className=\"licField\">\r\n                        <input\r\n                          placeholder=\"Enter your last name\"\r\n                          type=\"text\"\r\n                          id=\"lastName\"\r\n                          name=\"lastName\"\r\n                          className={`inputFields nameinput ${\r\n                            errors.lastName ? \"error\" : \"\"\r\n                          }`}\r\n                          {...register(\"lastName\", { required: true })}\r\n                        />\r\n                        {watch(\"lastName\") && (\r\n                          <img\r\n                            src={tick}\r\n                            alt=\"Tick Icon\"\r\n                            className=\"tickIcon\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      {errors.lastName && (\r\n                        <span className=\"errorField\">\r\n                          This field is required\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <label htmlFor=\"dob\" className=\"labelName\">\r\n                      Date of Birth\r\n                    </label>\r\n                    <div className=\"dobFields\">\r\n                      <div>\r\n                        <select\r\n                          id=\"day\"\r\n                          className={`inputFields dateInputFields text-padding ${\r\n                            errors.day ? \"error\" : \"\"\r\n                          }`}\r\n                          name=\"day\"\r\n                          defaultValue=\"\"\r\n                          {...register(\"day\", { required: true })}\r\n                        >\r\n                          <option value=\"\" disabled hidden>\r\n                            Day\r\n                          </option>\r\n                          {Array.from({ length: 31 }, (_, i) => (\r\n                            <option key={i} value={i + 1}>\r\n                              {i + 1}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.day && (\r\n                          <span className=\"errorField\">\r\n                            This field is required\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <div>\r\n                        <select\r\n                          id=\"month\"\r\n                          className={`inputFields dateInputFields text-padding ${\r\n                            errors.month ? \"error\" : \"\"\r\n                          }`}\r\n                          name=\"month\"\r\n                          defaultValue=\"\"\r\n                          {...register(\"month\", { required: true })}\r\n                        >\r\n                          <option value=\"\" disabled hidden>\r\n                            Month\r\n                          </option>\r\n                          {months.map((month) => (\r\n                            <option key={month.value} value={month.value}>\r\n                              {month.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.month && (\r\n                          <span className=\"errorField\">\r\n                            This field is required\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <div>\r\n                        <select\r\n                          id=\"year\"\r\n                          defaultValue=\"\"\r\n                          className={`inputFields dateInputFields text-padding ${\r\n                            errors.year ? \"error\" : \"\"\r\n                          }`}\r\n                          name=\"year\"\r\n                          {...register(\"year\", { required: true })}\r\n                        >\r\n                          <option value=\"\" disabled hidden>\r\n                            Year\r\n                          </option>\r\n                          {Array.from({ length: 100 }, (_, i) => (\r\n                            <option\r\n                              key={new Date().getFullYear() - i}\r\n                              value={new Date().getFullYear() - i}\r\n                            >\r\n                              {new Date().getFullYear() - i}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.year && (\r\n                          <span className=\"errorField\">\r\n                            This field is required\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"licField\">\r\n                    <label className=\"labelName\" htmlFor=\"name\">\r\n                      Driving License Number\r\n                    </label>\r\n                    <div className=\"licField\">\r\n                      <input\r\n                        placeholder=\"xxx-xx-xxx/xxxxx\"\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        name=\"license\"\r\n                        className={`inputFields ${\r\n                          errors.license ? \"error\" : \"\"\r\n                        }`}\r\n                        {...register(\"license\", {\r\n                          required: true,\r\n                          pattern: {\r\n                            value: /^[a-zA-Z0-9]{3}-[a-zA-Z0-9]{2}-[a-zA-Z0-9]{3}\\/[a-zA-Z0-9]{5}$/,\r\n                            message: \"Invalid format (xxx-xx-xxx/xxxxx)\",\r\n                          },\r\n                        })}\r\n                      />\r\n                      {watch(\"license\") &&\r\n                        watch(\"license\").match(\r\n                          /^[a-zA-Z0-9]{3}-[a-zA-Z0-9]{2}-[a-zA-Z0-9]{3}\\/[a-zA-Z0-9]{5}$/\r\n                        ) && (\r\n                          <img\r\n                            src={tick}\r\n                            alt=\"Tick Icon\"\r\n                            className=\"tickIcon\"\r\n                          />\r\n                        )}\r\n                    </div>\r\n                    {errors.license && (\r\n                      <span className=\"errorMessage\">\r\n                        {errors.license.message}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"getStartedButton\"\r\n                    onClick={handleSubmit(onSubmit)}\r\n                  >\r\n                    Get Started\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {currentStep === 2 && (\r\n              <>\r\n                <h1>Welcome Pete!</h1>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                <div className=\"fields\">\r\n                  <div>\r\n                    <label className=\"labelName\" htmlFor=\"address\">\r\n                      House name or number\r\n                    </label>\r\n                    <div className=\"licField\">\r\n                      <input\r\n                        placeholder=\"e.g 12\"\r\n                        type=\"text\"\r\n                        id=\"address\"\r\n                        name=\"address\"\r\n                        className={`inputFields nameinput ${\r\n                          errors.address ? \"error\" : \"\"\r\n                        }`}\r\n                        {...register(\"address\", { required: true })}\r\n                      />\r\n                      {watch(\"address\") && (\r\n                        <img src={tick} alt=\"Tick Icon\" className=\"tickIcon\" />\r\n                      )}\r\n                    </div>\r\n                    {errors.address && (\r\n                      <span className=\"errorField\">This field is required</span>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"labelName\" htmlFor=\"postcode\">\r\n                      Postcode\r\n                    </label>\r\n                    <div className=\"licField\">\r\n                      <input\r\n                        placeholder=\"e.g M50 3YJ\"\r\n                        type=\"text\"\r\n                        id=\"postcode\"\r\n                        name=\"postcode\"\r\n                        className={`inputFields nameinput ${\r\n                          errors.postcode ? \"error\" : \"\"\r\n                        }`}\r\n                        {...register(\"postcode\", { required: true })}\r\n                      />\r\n                      {watch(\"postcode\") && (\r\n                        <img src={tick} alt=\"Tick Icon\" className=\"tickIcon\" />\r\n                      )}\r\n                    </div>\r\n                    {errors.postcode && (\r\n                      <span className=\"errorField\">This field is required</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"addressButton\">\r\n                    <button type=\"button\" className=\"lookAddbtn\">\r\n                      Look up address\r\n                    </button>\r\n                    <button type=\"button\" className=\"addManbtn\">\r\n                      Enter address manually\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"addressFind\">\r\n                    <a className=\"findAddbtn\" href=\"#\">\r\n                      Having trouble finding your address?\r\n                    </a>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"labelName\" htmlFor=\"phone\">\r\n                      Contact Form\r\n                    </label>\r\n                    <div className=\"licField conMar\">\r\n                      <Controller\r\n                        name=\"phone\"\r\n                        control={control}\r\n                        rules={{ required: true }}\r\n                        render={({ field }) => (\r\n                          <PhoneInput\r\n                            className=\"PhoneNo\"\r\n                            {...field}\r\n                            country={\"us\"}\r\n                            placeholder=\"99 999 9999 999\"\r\n                            // disableCountryCode\r\n                            onChange={field.onChange}\r\n                            inputProps={{\r\n                              name: \"phone\",\r\n\r\n                              required: true,\r\n                              autoFocus: true,\r\n                              className: ` phoneInput nameinput ${\r\n                                errors.phone ? \"error\" : \"\"\r\n                              }`,\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                      {watch(\"phone\") && (\r\n                        <img src={tick} alt=\"Tick Icon\" className=\"tickIcon\" />\r\n                      )}\r\n                    </div>\r\n                    {errors.phone && (\r\n                      <span className=\"errorField\">This field is required</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"emailField\">\r\n                    <label className=\"labelName\" htmlFor=\"email\">\r\n                      Email\r\n                    </label>\r\n                    <div className=\"licField\">\r\n                      <input\r\n                        placeholder=\"example@email.com\"\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        className={`inputFields nameinput ${\r\n                          errors.email ? \"error\" : \"\"\r\n                        }`}\r\n                        {...register(\"email\", {\r\n                          required: \"This field is required\",\r\n                          pattern: {\r\n                            value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/,\r\n                            message: \"Invalid email address\",\r\n                          },\r\n                        })}\r\n                      />\r\n                      {watch(\"email\") &&\r\n                        /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/.test(\r\n                          watch(\"email\")\r\n                        ) && (\r\n                          <img\r\n                            src={tick}\r\n                            alt=\"Tick Icon\"\r\n                            className=\"tickIcon\"\r\n                          />\r\n                        )}\r\n                    </div>\r\n                    {errors.email && (\r\n                      <span className=\"errorField\">{errors.email.message}</span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <label htmlFor=\"selectField\" className=\"labelName\">\r\n                    Uber Driving Rating\r\n                  </label>\r\n                  <div className=\"licField\">\r\n                    <select\r\n                      id=\"selectField\"\r\n                      defaultValue=\"\"\r\n                      className={`inputFields ${errors.Rating ? \"error\" : \"\"}`}\r\n                      name=\"title\"\r\n                      {...register(\"Rating\", { required: true })}\r\n                    >\r\n                      <option value=\"\" disabled hidden>\r\n                        Please Select\r\n                      </option>\r\n                      <option value=\"Mr\">Blue</option>\r\n                      <option value=\"Ms\">Gold</option>\r\n                      <option value=\"Mrs\">Platinum</option>\r\n                      <option value=\"Mrs\">Diamond</option>\r\n                    </select>\r\n                    {watch(\"Rating\") && (\r\n                      <img src={tick} alt=\"Tick Icon\" className=\"tickIcon\" />\r\n                    )}\r\n                  </div>\r\n                  <p className=\"contactDetail\">\r\n                    This is your Uber Pro Status. Please ensure this is accurate\r\n                    as it will be validated by Uber and will affect your price.\r\n                  </p>\r\n                  {errors.Rating && (\r\n                    <span className=\"errorField\">This field is required</span>\r\n                  )}\r\n                </div>\r\n                <div className=\"multiBtn\">\r\n                  <button\r\n                    type=\"Button\"\r\n                    className=\"prevBtn\"\r\n                    onClick={handlePrevious}\r\n                  >\r\n                    {\" \"}\r\n                    <img className=\"PrevImg\" src={previous} alt=\"\" />\r\n                  </button>\r\n                  <button type=\"submit\" className=\"nextBtn\">\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {currentStep === 3 && (\r\n              <>\r\n                <h1>Quote Details</h1>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                <div className=\"fields\">\r\n                  <div>\r\n                    <label className=\"labelName\" htmlFor=\"date\">\r\n                      When would you like your cover to start?\r\n                    </label>\r\n                    <div className=\"licField\">\r\n                      <input\r\n                        placeholder=\"e.g 12\"\r\n                        type=\"date\"\r\n                        id=\"date\"\r\n                        name=\"date\"\r\n                        className={`inputFields nameinput ${\r\n                          errors.address ? \"error\" : \"\"\r\n                        }`}\r\n                        {...register(\"date\", { required: true })}\r\n                      />\r\n                      {watch(\"date\") && (\r\n                        <img src={tick} alt=\"Tick Icon\" className=\"tickIcon\" />\r\n                      )}\r\n                    </div>\r\n                    {errors.date && (\r\n                      <span className=\"errorField\">This field is required</span>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"labelName\" htmlFor=\"VehicleReg\">\r\n                      Vehicle Registration\r\n                    </label>\r\n                    <div className=\"licField\">\r\n                      <input\r\n                        placeholder=\"e.g EA21 WLP\"\r\n                        type=\"text\"\r\n                        id=\"VehicleReg\"\r\n                        name=\"VehicleReg\"\r\n                        className={`inputFields nameinput ${\r\n                          errors.VehicleReg ? \"error\" : \"\"\r\n                        }`}\r\n                        {...register(\"VehicleReg\", { required: true })}\r\n                      />\r\n                      {watch(\"VehicleReg\") && (\r\n                        <img src={tick} alt=\"Tick Icon\" className=\"tickIcon\" />\r\n                      )}\r\n                    </div>\r\n                    {errors.VehicleReg && (\r\n                      <span className=\"errorField\">This field is required</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"addressButton\">\r\n                    <button type=\"button\" className=\"lookAddbtn lookBtn\">\r\n                      Look up registration\r\n                    </button>\r\n                    <button type=\"button\" className=\"addManbtn\">\r\n                      Enter manually\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"addressFind\">\r\n                    <a className=\"findAddbtn\" href=\"#\">\r\n                      Having trouble finding your vehicle?\r\n                    </a>\r\n                  </div>\r\n                  <label className=\"labelName\">Who owns this vehicle?</label>\r\n                  <div className=\"radioGroup\">\r\n                    <label className=\"radioLabel\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        value=\"me\"\r\n                        {...register(\"ownership\", { required: true })}\r\n                      />\r\n                      Me\r\n                    </label>\r\n                    <label className=\"radioLabel\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        value=\"someone_else\"\r\n                        {...register(\"ownership\", { required: true })}\r\n                      />\r\n                      Someone else\r\n                    </label>\r\n                  </div>\r\n                  {errors.ownership && (\r\n                    <span className=\"errorField\">This field is required</span>\r\n                  )}\r\n\r\n                  <div className=\"dateStyle\">\r\n                    <label htmlFor=\"quotedob\" className=\"labelName\">\r\n                      Date of Birth\r\n                    </label>\r\n                    <div className=\"dobFields\">\r\n                      <div>\r\n                        <select\r\n                          id=\"quoteDay\"\r\n                          className={`inputFields dateInputFields text-padding ${\r\n                            errors.quoteDay ? \"error\" : \"\"\r\n                          }`}\r\n                          name=\"quoteDay\"\r\n                          defaultValue=\"\"\r\n                          {...register(\"quoteDay\", { required: true })}\r\n                        >\r\n                          <option value=\"\" disabled hidden>\r\n                            Day\r\n                          </option>\r\n                          {Array.from({ length: 31 }, (_, i) => (\r\n                            <option key={i} value={i + 1}>\r\n                              {i + 1}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.quoteDay && (\r\n                          <span className=\"errorField\">\r\n                            This field is required\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <div>\r\n                        <select\r\n                          id=\"quoteMonth\"\r\n                          className={`inputFields dateInputFields text-padding ${\r\n                            errors.quoteMonth ? \"error\" : \"\"\r\n                          }`}\r\n                          name=\"quoteMonth\"\r\n                          defaultValue=\"\"\r\n                          {...register(\"quoteMonth\", { required: true })}\r\n                        >\r\n                          <option value=\"\" disabled hidden>\r\n                            Month\r\n                          </option>\r\n                          {months.map((month) => (\r\n                            <option key={month.value} value={month.value}>\r\n                              {month.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.quoteMonth && (\r\n                          <span className=\"errorField\">\r\n                            This field is required\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <div>\r\n                        <select\r\n                          id=\"quoteYear\"\r\n                          defaultValue=\"\"\r\n                          className={`inputFields dateInputFields text-padding ${\r\n                            errors.quoteYear ? \"error\" : \"\"\r\n                          }`}\r\n                          name=\"quoteYear\"\r\n                          {...register(\"quoteYear\", { required: true })}\r\n                        >\r\n                          <option value=\"\" disabled hidden>\r\n                            Year\r\n                          </option>\r\n                          {Array.from({ length: 100 }, (_, i) => (\r\n                            <option\r\n                              key={new Date().getFullYear() - i}\r\n                              value={new Date().getFullYear() - i}\r\n                            >\r\n                              {new Date().getFullYear() - i}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.quoteYear && (\r\n                          <span className=\"errorField\">\r\n                            This field is required\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"emailField\">\r\n                    <label className=\"labelName\" htmlFor=\"seats\">\r\n                      How Many Seats Does Your Taxi Have\r\n                    </label>\r\n                    <div className=\"licField\">\r\n                      <input\r\n                        placeholder=\"e.g. 4\"\r\n                        type=\"number\"\r\n                        id=\"seats\"\r\n                        name=\"seats\"\r\n                        className={`inputFields nameinput ${\r\n                          errors.seats ? \"error\" : \"\"\r\n                        }`}\r\n                        {...register(\"seats\", {\r\n                          required: \"This field is required\",\r\n                        })}\r\n                      />\r\n                      {watch(\"seats\") && (\r\n                        <img src={tick} alt=\"Tick Icon\" className=\"tickIcon\" />\r\n                      )}\r\n                    </div>\r\n                    {errors.seats && (\r\n                      <span className=\"errorField\">{errors.seats.message}</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"inputFieldContainer\">\r\n            <label className=\"labelName\" htmlFor=\"marketValue\">\r\n              Estimated market value of vehicle\r\n            </label>\r\n            <div className=\"inputWithIcon\">\r\n              <div className=\"currencyDropdown\">\r\n                <select\r\n                  id=\"currency\"\r\n                  name=\"currency\"\r\n                  className=\"currencySelect\"\r\n                  {...register(\"currency\", { required: true })}\r\n                >\r\n                  <option value=\"£\">£</option>\r\n                  <option value=\"$\">$</option>\r\n                  <option value=\"€\">€</option>\r\n                </select>\r\n              </div>\r\n              <input\r\n                placeholder=\"5,000\"\r\n                type=\"number\"\r\n                id=\"marketValue\"\r\n                name=\"marketValue\"\r\n                className={`inputFields marketValueInput ${\r\n                  errors.marketValue ? \"error\" : \"\"\r\n                }`}\r\n                {...register(\"marketValue\", {\r\n                  required: \"This field is required\",\r\n                })}\r\n              />\r\n              {watch(\"marketValue\") && (\r\n                <img src={tick} alt=\"Tick Icon\" className=\"tickIcon\" />\r\n              )}\r\n            </div>\r\n            {errors.marketValue && (\r\n              <span className=\"errorField\">{errors.marketValue.message}</span>\r\n            )}\r\n          </div>\r\n                \r\n                </div>\r\n                <div className=\"multiBtn\">\r\n                  <button\r\n                    type=\"Button\"\r\n                    className=\"prevBtn\"\r\n                    onClick={handlePrevious}\r\n                  >\r\n                    {\" \"}\r\n                    <img className=\"PrevImg\" src={previous} alt=\"\" />\r\n                  </button>\r\n                  <button type=\"submit\" className=\"nextBtn\">\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":[],"sourceRoot":""}