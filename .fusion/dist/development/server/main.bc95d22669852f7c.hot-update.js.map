{"version":3,"file":"main.bc95d22669852f7c.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAEA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAHA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;;;;;;;;;ACvQA","sources":["C:\\Users\\DELL\\Desktop\\Uber Insurance\\uberForm\\src\\pages\\home.js","C:\\Users\\DELL\\Desktop\\Uber Insurance\\uberForm\\webpack\\runtime\\getFullHash"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Helmet } from \"fusion-plugin-react-helmet-async\";\n\nimport { assetUrl } from \"fusion-core\";\nimport Pair from \"../images/pair\";\n\nconst css = assetUrl(\"./home.css\");\n\nconst Home = () => {\n\n\n  <Helmet>\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\"/>\n</Helmet>\n  const tick = assetUrl(\"../images/tick.svg\");\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    watch,\n  } = useForm();\n  const firstName = watch(\"firstName\");\n  const lastName = watch(\"lastName\");\n  const title = watch(\"title\");\n  const license = watch(\"license\");\n\n  const months = [\n    { value: \"1\", name: \"January\" },\n    { value: \"2\", name: \"February\" },\n    { value: \"3\", name: \"March\" },\n    { value: \"4\", name: \"April\" },\n    { value: \"5\", name: \"May\" },\n    { value: \"6\", name: \"June\" },\n    { value: \"7\", name: \"July\" },\n    { value: \"8\", name: \"August\" },\n    { value: \"9\", name: \"September\" },\n    { value: \"10\", name: \"October\" },\n    { value: \"11\", name: \"November\" },\n    { value: \"12\", name: \"December\" },\n  ];\n\n  const [formData, setFormData] = useState([]);\n\n  const onSubmit = (data) => {\n    console.log(data); // You can handle form submission here\n    setFormData(data); // Update formData state with form data\n  };\n\n  return (\n    <>\n      <Helmet>\n        <link rel=\"stylesheet\" href={css} />\n      </Helmet>\n      <nav>Uber</nav>\n\n      <div className=\"container form\">\n        <div className=\"container border\">\n          <Pair />\n          <h1>\n            Uber Insurance quote in <br /> under 2 minutes\n          </h1>\n          <p>\n            Compare all Uber approved Private Hire motor insurance providers in\n            one place. All Private Hire motor policies must be purchased online.\n            All providers after automatic uploads of your insurance certificate\n            directly to your uber account, which will help streamline your\n            verification process.\n          </p>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"fields\">\n              <div className=\"licField\">\n                <label className=\"labelName\" htmlFor=\"name\">\n                  Driving License Number\n                </label>\n                <div className=\"licField\">\n                  <input\n                    placeholder=\"xxx-xx-xxx/xxxxx\"\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"license\"\n                    className={`inputFields ${errors.license ? \"error\" : \"\"}`}\n                    {...register(\"license\", {\n                      required: true,\n                      pattern: {\n                        value: /^[a-zA-Z0-9]{3}-[a-zA-Z0-9]{2}-[a-zA-Z0-9]{3}\\/[a-zA-Z0-9]{5}$/,\n                        message: \"Invalid format (xxx-xx-xxx/xxxxx)\",\n                      },\n                    })}\n                  />\n                  {license && license.match(/^[a-zA-Z0-9]{3}-[a-zA-Z0-9]{2}-[a-zA-Z0-9]{3}\\/[a-zA-Z0-9]{5}$/) && (\n                    <img src={tick} alt=\"Tick Icon\" className=\"tickIcon\" />\n                  )}\n                </div>\n                \n                {errors.license && <span className=\"errorMessage\">{errors.license.message}</span>}\n              </div>\n              <label htmlFor=\"selectField\" className=\"labelName\">\n                Title\n              </label>\n              <div className=\"licField\">\n                <select\n                  id=\"selectField\"\n                  className={`inputFields ${errors.title ? \"error\" : \"\"}`}\n                  name=\"title\"\n                  {...register(\"title\", { required: true })}\n                >\n                  <option value=\"\" disabled selected hidden>\n                    <span>e.g Mrs</span>\n                  </option>\n                  <option value=\"Mr\">Mr</option>\n                  <option value=\"Ms\">Ms</option>\n                  <option value=\"Mrs\">Mrs</option>\n                </select>\n                {title && (\n                  <img src={tick} alt=\"Tick Icon\" className=\"tickIcon\" />\n                )}\n              </div>\n              {errors.title && (\n                <span className=\"errorField\">This field is required</span>\n              )}\n              <div className=\"nameFields\">\n                <div>\n                  <label className=\"labelName\" htmlFor=\"firstName\">\n                    First Name\n                  </label>\n                  <div className=\"licField\">\n                    <input\n                      placeholder=\"Enter your first name\"\n                      type=\"text\"\n                      id=\"firstName\"\n                      name=\"firstName\"\n                      className={`inputFields nameinput ${\n                        errors.firstName ? \"error\" : \"\"\n                      }`}\n                      {...register(\"firstName\", { required: true })}\n                    />\n                    {firstName && (\n                      <img src={tick} alt=\"Tick Icon\" className=\"tickIcon\" />\n                    )}\n                  </div>\n                  {errors.firstName && (\n                    <span className=\"errorField\">This field is required</span>\n                  )}\n                </div>\n                <div>\n                  <label className=\"labelName\" htmlFor=\"lastName\">\n                    Last Name\n                  </label>\n                  <div className=\"licField\">\n                    <input\n                      placeholder=\"Enter your last name\"\n                      type=\"text\"\n                      id=\"lastName\"\n                      name=\"lastName\"\n                      className={`inputFields nameinput ${\n                        errors.lastName ? \"error\" : \"\"\n                      }`}\n                      {...register(\"lastName\", { required: true })}\n                    />\n                    {lastName && (\n                      <img src={tick} alt=\"Tick Icon\" className=\"tickIcon\" />\n                    )}\n                  </div>\n                  {errors.lastName && (\n                    <span className=\"errorField\">This field is required</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"\">\n                <label htmlFor=\"dob\" className=\"labelName\">\n                  Date of Birth\n                </label>``\n                <div className=\"dobFields\">\n                  <div className=\"\">\n                    <select\n                      id=\"day\"\n                      className={`inputFields dateInputFields text-padding ${\n                        errors.day ? \"error\" : \"\"\n                      }`}\n                      name=\"day\"\n                      defaultValue=\"\"\n                      {...register(\"day\", { required: true })}\n                    >\n                      <option value=\"\" disabled hidden>\n                        Day\n                      </option>\n                      {Array.from({ length: 31 }, (_, i) => (\n                        <option key={i} value={i + 1}>\n                          {i + 1}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.day && (\n                      <span className=\"errorField\">This field is required</span>\n                    )}\n                  </div>\n                  <div className=\"\">\n                    <select\n                      id=\"month\"\n                      className={`inputFields dateInputFields text-padding ${\n                        errors.month ? \"error\" : \"\"\n                      }`}\n                      name=\"month\"\n                      defaultValue=\"\"\n                      {...register(\"month\", { required: true })}\n                    >\n                      <option value=\"\" disabled hidden>\n                        Month\n                      </option>\n                      {months.map((month) => (\n                        <option key={month.value} value={month.value}>\n                          {month.name}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.month && (\n                      <span className=\"errorField\">This field is required</span>\n                    )}\n                  </div>\n                  <div className=\"\">\n                    <select\n                      id=\"year\"\n                      defaultValue=\"\"\n                      className={`inputFields dateInputFields text-padding ${\n                        errors.year ? \"error\" : \"\"\n                      }`}\n                      name=\"year\"\n                      {...register(\"year\", { required: true })}\n                    >\n                      <option value=\"\" disabled hidden>\n                        Year\n                      </option>\n                      {Array.from({ length: 100 }, (_, i) => (\n                        <option\n                          key={new Date().getFullYear() - i}\n                          value={new Date().getFullYear() - i}\n                        >\n                          {new Date().getFullYear() - i}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.year && (\n                      <span className=\"errorField\">This field is required</span>\n                    )}\n                  </div>\n                </div>\n                <button type=\"submit\">Get Started</button>\n              </div>\n            </div>\n       \n          </form>\n        </div>\n      </div>\n\n      <button></button>\n\n      \n    </>\n  );\n};\n\nexport default Home;\n","__webpack_require__.h = () => (\"18cda9e6ba93300e\")"],"names":[],"sourceRoot":""}